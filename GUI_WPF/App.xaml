<Application x:Class="Tsunami.Gui.Wpf.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Tsunami.Gui.Wpf"
             xmlns:streaming="clr-namespace:Tsunami.Streaming;assembly=Tsunami.StreamingManager"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <!-- MahApp Style Resources-->
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <!-- Accent and AppTheme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <!-- Icons pack -->
                <ResourceDictionary Source="/Resources/Icons.xaml" />
                <!-- Required for AnimatedSingleRowTabControl -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- Tsunami MVVM for SessionManager Events -->
            <local:TorrentStatusViewModel x:Key="TorrentStatusViewModel" />
            
            <!-- Tsunami MVVM for Player-->
            <streaming:PlayerViewModel x:Key="PlayerDataContext" />

            <!-- Circular ProgressBar - Credits: http://stackoverflow.com/questions/23046565/wpf-radial-progressbar-meter-i-e-battery-meter -->
            <local:ProgressToAngleConverter x:Key="ProgressConverter"/>
            <Style TargetType="{x:Type ProgressBar}" x:Key="ProgressBarStyle">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <Grid>
                                <Ellipse Stroke="Black" Margin="1" Fill="White"/>
                                <Ellipse Stroke="Black" Margin="1" Fill="White"/>
                                <local:ProgressArc StrokeThickness="5" Stroke="{TemplateBinding Background}" Margin="2">
                                    <local:ProgressArc.StartAngle>
                                        <MultiBinding Converter="{StaticResource ProgressConverter}">
                                            <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="." RelativeSource="{RelativeSource TemplatedParent}"/>
                                        </MultiBinding>
                                    </local:ProgressArc.StartAngle>
                                    <local:ProgressArc.EndAngle>
                                        <MultiBinding Converter="{StaticResource ProgressConverter}">
                                            <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="." RelativeSource="{RelativeSource TemplatedParent}"/>
                                        </MultiBinding>
                                    </local:ProgressArc.EndAngle>
                                </local:ProgressArc>
                                <TextBlock Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, StringFormat=\{0:0\}%}"
                                       Foreground="Black" VerticalAlignment="Center" HorizontalAlignment="Center"
                                       FontSize="10" FontWeight="Bold"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--body content datagrid cell vertical centering-->
            <Style x:Key="Body_Content_DataGrid_Centering" TargetType="{x:Type DataGridCell}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ListBox text wrap -->
            <!--<Style TargetType="ListBox">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->

        </ResourceDictionary>
    </Application.Resources>
</Application>

    
